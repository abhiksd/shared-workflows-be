# Local Development Profile
# Use H2 in-memory database for local development
spring:
  profiles:
    active: local
  
  # H2 Database Configuration
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: password
    hikari:
      maximum-pool-size: 5
      minimum-idle: 1
      connection-timeout: 20000
  
  # H2 Console (for development)
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: false
  
  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  
  # Security Configuration (Minimal for local dev)
  security:
    oauth2:
      client:
        registration:
          azure:
            client-id: local-client-id
            client-secret: local-client-secret
            scope: openid,profile,email
            redirect-uri: http://localhost:8080/login/oauth2/code/azure
        provider:
          azure:
            authorization-uri: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
            token-uri: https://login.microsoftonline.com/common/oauth2/v2.0/token
            user-info-uri: https://graph.microsoft.com/v1.0/me
            user-name-attribute: name
  
  # Redis Configuration (Disabled for local)
  redis:
    host: localhost
    port: 6379
    password: 
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
  cache:
    type: simple  # Use simple cache instead of Redis for local
  
  # Development Tools
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api

# Logging Configuration
logging:
  level:
    com.example.javaapp: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management & Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,beans,configprops
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Application Configuration
app:
  name: Java App
  version: 1.0.0
  environment: local
  cors:
    allowed-origins: "http://localhost:3000,http://localhost:8080"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    allow-credentials: true
  jwt:
    secret: local-jwt-secret-key-for-development-only
    expiration: 86400000  # 24 hours