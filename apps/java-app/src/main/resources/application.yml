# Base Spring Boot Configuration
# This file contains common configuration for all environments

spring:
  application:
    name: java-app
  
  # Profile configuration
  profiles:
    active: local
  
  # Database configuration (will be overridden by profiles)
  datasource:
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
  
  # JPA/Hibernate configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        jdbc.batch_versioned_data: true
  
  # Jackson configuration
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  
  # Security configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          # Will be configured per environment
          issuer-uri: ${OAUTH2_ISSUER_URI:}

# Server configuration
server:
  port: 8080
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
  compression:
    enabled: true
    min-response-size: 1024

# Management/Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
      slo:
        http.server.requests: 10ms,50ms,100ms,200ms,500ms
  health:
    diskspace:
      enabled: true
    db:
      enabled: true

# Logging configuration
logging:
  level:
    root: INFO
    com.example.javaapp: INFO
    org.springframework.security: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: ERROR
    org.hibernate.type.descriptor.sql.BasicBinder: ERROR
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"

# Application-specific configuration
app:
  name: Java Application
  version: '@project.version@'
  description: Production-grade Java Spring Boot application
  
  # Feature toggles
  features:
    enable-caching: true
    enable-metrics: true
    enable-tracing: false
  
  # API configuration
  api:
    rate-limit:
      requests-per-minute: 1000
    timeout:
      read: 30s
      connect: 10s
  
  # Cache configuration
  cache:
    default-ttl: 300
    max-entries: 1000
  
  # External service configuration
  external-services:
    timeout: 30s
    retry-attempts: 3
    circuit-breaker:
      failure-threshold: 5
      timeout: 60s

# Custom health indicators
health:
  custom:
    enabled: true
    timeout: 5s