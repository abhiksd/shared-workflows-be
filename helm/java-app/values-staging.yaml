# Staging Environment Values for Java Spring Boot Application
shared-app:
  global:
    environment: staging

  # Multiple replicas for testing load balancing
  replicaCount: 2

  image:
    pullPolicy: IfNotPresent

  # Environment variables
  env:
    - name: ENVIRONMENT
      value: "staging"
    - name: APPLICATION_NAME
      value: "java-app"
    - name: SPRING_PROFILES_ACTIVE
      value: "staging"
    - name: SERVER_PORT
      value: "8080"
    - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
      value: "health,info,metrics,prometheus"  # Limited actuator endpoints

  # ConfigMap for staging
  configMap:
    data:
      LOG_LEVEL: "info"
      DEBUG: "false"
      JAVA_OPTS: "-Xms512m -Xmx1g -XX:+UseG1GC -XX:+UseStringDeduplication"

  # Production-like resource limits
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

  # Tighter health checks
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

  # Ingress configuration
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rate-limit: "100"
    hosts:
      - host: java-app-staging.company.com
        paths:
          - path: /
            pathType: Prefix
    tls: []

  # Enable autoscaling for staging
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  # Monitoring enabled
  monitoring:
    enabled: true

  # Pod disruption budget for availability testing
  podDisruptionBudget:
    enabled: true
    minAvailable: 1

  # Network policy enabled for security testing
  networkPolicy:
    enabled: true

  # Anti-affinity for better distribution
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - java-app
            topologyKey: kubernetes.io/hostname

  # Resource quotas and limits
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 2000
    seccompProfile:
      type: RuntimeDefault