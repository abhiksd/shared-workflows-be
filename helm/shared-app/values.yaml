# Default values for shared-app
# This is a YAML-formatted file.

# Global configuration
global:
  environment: dev
  applicationName: shared-app
  applicationType: java-springboot

# Image configuration
image:
  repository: ""
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []

# Name overrides
nameOverride: ""
fullnameOverride: ""

# Service account configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod and container security contexts
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  capabilities:
    drop:
    - ALL

# Deployment configuration
replicaCount: 1

deploymentStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%

# Resource configuration
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 256Mi

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

# Service configuration
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  annotations: {}

# Ingress configuration
ingress:
  enabled: false
  className: ""
  domain: example.com
  hostname: ""
  annotations: {}
  tls:
    enabled: false
    secretName: ""

# Health checks
livenessProbe:
  enabled: true
  httpGet:
    path: /health
    port: http
    scheme: HTTP
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  enabled: true
  httpGet:
    path: /ready
    port: http
    scheme: HTTP
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1

startupProbe:
  enabled: false
  httpGet:
    path: /health
    port: http
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30
  successThreshold: 1

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  annotations: {}

# Network Policy
networkPolicy:
  enabled: false
  annotations: {}
  ingress:
    ingressNamespace: ingress-nginx
    customRules: []
  egress:
    enabled: false
    customRules: []

# Metrics and monitoring
metrics:
  enabled: false
  port: 9090
  service:
    type: ClusterIP
    annotations: {}
  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s
    namespace: ""
    labels: {}
    annotations: {}
    metricRelabelings: []
    relabelings: []
    targetLabels: []
    podTargetLabels: []
    basicAuth:
      enabled: false
      secretName: ""
      usernameKey: username
      passwordKey: password
    bearerTokenSecret:
      enabled: false
      name: ""
      key: token
    tlsConfig: {}

# Database configuration
database:
  enabled: false
  type: postgresql
  host: ""
  port: 5432
  name: ""
  username: ""
  namespace: ""
  namespaceSelector: {}

# Redis configuration
redis:
  enabled: false
  host: ""
  port: 6379
  password: ""
  namespace: ""
  namespaceSelector: {}

# ConfigMap configuration
configMap:
  enabled: false
  data: {}

# Environment variables
env: []

envFrom: []

# Volume configuration
volumes: []
volumeMounts: []
extraSecretMounts: []

# Init containers
initContainers: []

# Sidecar containers
sidecarContainers: []

# Additional ports
additionalPorts: []

# Pod configuration
podAnnotations: {}
podLabels: {}

# Deployment annotations
deploymentAnnotations: {}

# Node scheduling
nodeSelector: {}

tolerations: []

affinity: {}

topologySpreadConstraints: []

# Priority and lifecycle
priorityClassName: ""
terminationGracePeriodSeconds: 30
dnsPolicy: ""
dnsConfig: {}

lifecycle:
  preStop: {}
  postStart: {}

# Common labels and annotations
commonLabels: {}
commonAnnotations: {}

# Existing resources
existingSecret: ""
existingConfigMap: ""

# Health and metrics paths (auto-determined by application type)
healthPath: ""
readinessPath: ""
metricsPath: ""

# Tests configuration
tests:
  enabled: false
  image:
    repository: busybox
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi