apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "shared-app.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "shared-app.labels" . | nindent 4 }}
  annotations:
    deployment.kubernetes.io/revision: "{{ .Release.Revision }}"
    {{- with .Values.deploymentAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: {{ .Values.deploymentStrategy.type | default "RollingUpdate" }}
    {{- if eq .Values.deploymentStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.deploymentStrategy.rollingUpdate.maxSurge | default "25%" }}
      maxUnavailable: {{ .Values.deploymentStrategy.rollingUpdate.maxUnavailable | default "25%" }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "shared-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "shared-app.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "shared-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- with .Values.dnsPolicy }}
      dnsPolicy: {{ . }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.initContainers }}
        {{- with .Values.initContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
        {{- if .Values.database.enabled }}
        - name: wait-for-db
          image: postgres:15-alpine
          command:
            - sh
            - -c
            - |
              until pg_isready -h {{ .Values.database.host }} -p {{ .Values.database.port | default 5432 }} -U {{ .Values.database.username }}; do
                echo "Waiting for database..."
                sleep 2
              done
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "shared-app.fullname" . }}-secrets
                  key: database-password
        {{- end }}
        {{- if .Values.redis.enabled }}
        - name: wait-for-redis
          image: redis:7-alpine
          command:
            - sh
            - -c
            - |
              until redis-cli -h {{ .Values.redis.host }} -p {{ .Values.redis.port | default 6379 }} ping; do
                echo "Waiting for Redis..."
                sleep 2
              done
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort | default .Values.service.port }}
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.port | default 9090 }}
              protocol: TCP
            {{- end }}
            {{- range .Values.additionalPorts }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ .value | quote }}
              {{- else if .valueFrom }}
              valueFrom:
                {{- toYaml .valueFrom | nindent 16 }}
              {{- end }}
            {{- end }}
            {{- if .Values.global.environment }}
            - name: ENVIRONMENT
              value: {{ .Values.global.environment | quote }}
            {{- end }}
            {{- if .Values.global.applicationName }}
            - name: APPLICATION_NAME
              value: {{ .Values.global.applicationName | quote }}
            {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          {{- if .Values.envFrom }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- if .Values.livenessProbe.httpGet }}
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port | default "http" }}
              scheme: {{ .Values.livenessProbe.httpGet.scheme | default "HTTP" }}
              {{- with .Values.livenessProbe.httpGet.httpHeaders }}
              httpHeaders:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            {{- else if .Values.livenessProbe.exec }}
            exec:
              {{- toYaml .Values.livenessProbe.exec | nindent 14 }}
            {{- else if .Values.livenessProbe.tcpSocket }}
            tcpSocket:
              {{- toYaml .Values.livenessProbe.tcpSocket | nindent 14 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold | default 3 }}
            successThreshold: {{ .Values.livenessProbe.successThreshold | default 1 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- if .Values.readinessProbe.httpGet }}
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port | default "http" }}
              scheme: {{ .Values.readinessProbe.httpGet.scheme | default "HTTP" }}
              {{- with .Values.readinessProbe.httpGet.httpHeaders }}
              httpHeaders:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            {{- else if .Values.readinessProbe.exec }}
            exec:
              {{- toYaml .Values.readinessProbe.exec | nindent 14 }}
            {{- else if .Values.readinessProbe.tcpSocket }}
            tcpSocket:
              {{- toYaml .Values.readinessProbe.tcpSocket | nindent 14 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 5 }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 3 }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold | default 3 }}
            successThreshold: {{ .Values.readinessProbe.successThreshold | default 1 }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            {{- if .Values.startupProbe.httpGet }}
            httpGet:
              path: {{ .Values.startupProbe.httpGet.path }}
              port: {{ .Values.startupProbe.httpGet.port | default "http" }}
              scheme: {{ .Values.startupProbe.httpGet.scheme | default "HTTP" }}
              {{- with .Values.startupProbe.httpGet.httpHeaders }}
              httpHeaders:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            {{- else if .Values.startupProbe.exec }}
            exec:
              {{- toYaml .Values.startupProbe.exec | nindent 14 }}
            {{- else if .Values.startupProbe.tcpSocket }}
            tcpSocket:
              {{- toYaml .Values.startupProbe.tcpSocket | nindent 14 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds | default 10 }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold | default 30 }}
            successThreshold: {{ .Values.startupProbe.successThreshold | default 1 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.configMap.enabled }}
            - name: config
              mountPath: /app/config
              readOnly: true
            {{- end }}
            {{- range .Values.volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
              {{- if .readOnly }}
              readOnly: {{ .readOnly }}
              {{- end }}
            {{- end }}
            {{- range .Values.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly | default true }}
            {{- end }}
          lifecycle:
            {{- if .Values.lifecycle.preStop }}
            preStop:
              {{- toYaml .Values.lifecycle.preStop | nindent 14 }}
            {{- else }}
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - sleep 15
            {{- end }}
            {{- if .Values.lifecycle.postStart }}
            postStart:
              {{- toYaml .Values.lifecycle.postStart | nindent 14 }}
            {{- end }}
        {{- if .Values.sidecarContainers }}
        {{- with .Values.sidecarContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
      volumes:
        {{- if .Values.configMap.enabled }}
        - name: config
          configMap:
            name: {{ include "shared-app.fullname" . }}-config
            defaultMode: 0644
        {{- end }}
        {{- range .Values.volumes }}
        - name: {{ .name }}
          {{- if .configMap }}
          configMap:
            {{- toYaml .configMap | nindent 12 }}
          {{- else if .secret }}
          secret:
            {{- toYaml .secret | nindent 12 }}
          {{- else if .emptyDir }}
          emptyDir:
            {{- toYaml .emptyDir | nindent 12 }}
          {{- else if .persistentVolumeClaim }}
          persistentVolumeClaim:
            {{- toYaml .persistentVolumeClaim | nindent 12 }}
          {{- else if .hostPath }}
          hostPath:
            {{- toYaml .hostPath | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- range .Values.extraSecretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
            defaultMode: {{ .defaultMode | default 0644 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- if .Values.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "shared-app.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "shared-app.labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "shared-app.fullname" . }}
  minReplicas: {{ .Values.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.autoscaling.maxReplicas }}
  metrics:
    {{- if .Values.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}
    {{- end }}
    {{- if .Values.autoscaling.targetMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.autoscaling.targetMemoryUtilizationPercentage }}
    {{- end }}
{{- end }}