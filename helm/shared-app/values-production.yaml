# Production environment values for shared-app
# This file overrides the default values.yaml for production environment

global:
  environment: production
  applicationName: shared-app
  applicationType: java-springboot

# Production specific replica count
replicaCount: 3

# Image configuration for production
image:
  repository: myregistry.azurecr.io/shared-app
  pullPolicy: IfNotPresent
  tag: "prod-latest"

# Service configuration
service:
  type: ClusterIP
  port: 8080
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "false"

# Ingress configuration for production
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "200"
    nginx.ingress.kubernetes.io/rate-limit-burst: "300"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
  hosts:
    - host: shared-app.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: shared-app-prod-tls
      hosts:
        - shared-app.yourdomain.com

# Resource limits for production (high resources)
resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Autoscaling enabled for production with more aggressive settings
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

# Production environment variables
env:
  - name: ENVIRONMENT
    value: "production"
  - name: APPLICATION_NAME
    value: "shared-app"
  - name: LOG_LEVEL
    value: "warn"
  - name: DEBUG
    value: "false"
  - name: SPRING_PROFILES_ACTIVE
    value: "prod"
  - name: JVM_OPTS
    value: "-Xms1g -Xmx1g -XX:+UseG1GC -XX:MaxGCPauseMillis=200"

# ConfigMap configuration for production
configMap:
  enabled: true
  data:
    LOG_LEVEL: "warn"
    DEBUG: "false"
    ENVIRONMENT: "production"
    DATABASE_POOL_SIZE: "20"
    CACHE_TTL: "3600"
    RATE_LIMIT_ENABLED: "true"
    CONNECTION_TIMEOUT: "5000"
    READ_TIMEOUT: "30000"

# Production specific probes (strict)
livenessProbe:
  enabled: true
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  enabled: true
  httpGet:
    path: /actuator/health/readiness
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Startup probe for production
startupProbe:
  enabled: true
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30

# Pod disruption budget mandatory for production
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Network policy strictly enforced for production
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
      ports:
      - protocol: TCP
        port: 8080
  egress:
    - to: []
      ports:
      - protocol: TCP
        port: 443
      - protocol: TCP
        port: 53
      - protocol: UDP
        port: 53

# Monitoring configuration for production
monitoring:
  enabled: true
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"
  serviceMonitor:
    enabled: true
    interval: 15s
    scrapeTimeout: 10s
  alerts:
    enabled: true

# Security context (strict production)
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 2000
  seccompProfile:
    type: RuntimeDefault

# Volume mounts for production
volumeMounts:
  - name: tmp
    mountPath: /tmp
  - name: logs
    mountPath: /app/logs

# Volumes for production
volumes:
  - name: tmp
    emptyDir:
      sizeLimit: 1Gi
  - name: logs
    emptyDir:
      sizeLimit: 2Gi

# Azure Key Vault integration (production)
azureKeyVault:
  enabled: true
  vaultName: "your-keyvault-prod"
  secrets:
    - secretName: database-url
      keyVaultSecretName: shared-app-prod-database-url
    - secretName: database-password
      keyVaultSecretName: shared-app-prod-database-password
    - secretName: jwt-secret
      keyVaultSecretName: shared-app-prod-jwt-secret
    - secretName: redis-url
      keyVaultSecretName: shared-app-prod-redis-url
    - secretName: api-key
      keyVaultSecretName: shared-app-prod-api-key
    - secretName: storage-connection
      keyVaultSecretName: shared-app-prod-storage-connection
    - secretName: monitoring-token
      keyVaultSecretName: shared-app-prod-monitoring-token
    - secretName: external-service-key
      keyVaultSecretName: shared-app-prod-external-service-key

# Production specific annotations
podAnnotations:
  environment: "production"
  team: "platform"
  cost-center: "production"
  backup: "enabled"
  monitoring: "critical"

# Node selector for production workloads
nodeSelector:
  kubernetes.io/os: linux
  node-type: production
  zone: "high-availability"

# Tolerations for production
tolerations:
  - key: "production-workload"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"

# Affinity rules for production (strict anti-affinity)
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: app.kubernetes.io/name
          operator: In
          values:
          - shared-app
      topologyKey: kubernetes.io/hostname
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: node-type
          operator: In
          values:
          - production

# Additional production settings
terminationGracePeriodSeconds: 60

# Service account with specific permissions for production
serviceAccount:
  create: true
  annotations:
    azure.workload.identity/client-id: "your-workload-identity-client-id"
  name: "shared-app-prod"

# Tests configuration for production
tests:
  enabled: true
  image:
    repository: myregistry.azurecr.io/shared-app-tests
    tag: "latest"
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi