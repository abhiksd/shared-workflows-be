apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "java-backend1.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "java-backend1.labels" . | nindent 4 }}
  annotations:
    deployment.kubernetes.io/revision: "{{ .Release.Revision }}"
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "java-backend1.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.monitoring.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "{{ .Values.service.port }}"
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "java-backend1.selectorLabels" . | nindent 8 }}
        {{- if .Values.azureKeyVault.enabled }}
        azure.workload.identity/use: "true"
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "java-backend1.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            # Spring Boot Core Configuration
            - name: SERVER_PORT
              value: "{{ .Values.service.port }}"
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ .Values.global.environment }}"
            - name: SPRING_APPLICATION_NAME
              value: {{ .Values.global.applicationName | quote }}
            - name: SPRING_CONFIG_LOCATION
              value: "classpath:/application.yml,classpath:/application-{{ .Values.global.environment }}.yml"
            {{- if .Values.configMap.enabled }}
            - name: SPRING_CONFIG_ADDITIONAL_LOCATION
              value: "file:/etc/config/"
            {{- end }}
            # Management and Monitoring
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "java-backend1.fullname" . }}-config
                  key: management.endpoints.web.exposure.include
            - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "java-backend1.fullname" . }}-config
                  key: management.endpoint.health.show-details
            - name: MANAGEMENT_SERVER_PORT
              value: "{{ .Values.service.port }}"
            # JVM Configuration
            {{- if .Values.configMap.data.JAVA_OPTS }}
            - name: JAVA_OPTS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "java-backend1.fullname" . }}-config
                  key: JAVA_OPTS
            {{- end }}
            # Logging Configuration
            - name: LOGGING_LEVEL_ROOT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "java-backend1.fullname" . }}-config
                  key: LOG_LEVEL
            {{- if .Values.configMap.data.DEBUG }}
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: {{ include "java-backend1.fullname" . }}-config
                  key: DEBUG
            {{- end }}
            # Spring Boot Profile Configuration
            {{- if .Values.springBootProfile.enabled }}
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.springBootProfile.activeProfile | default .Values.global.environment }}
            - name: SPRING_CONFIG_LOCATION
              value: {{ .Values.springBootProfile.configLocation | default "classpath:application.yml" }}
            - name: CONFIG_MANAGEMENT_TYPE
              value: "spring-boot-profiles"
            {{- end }}
            # Kubernetes Secrets Path (replaces Azure Key Vault)
            {{- if .Values.kubernetesSecrets.enabled }}
            - name: KUBERNETES_SECRETS_PATH
              value: "/etc/secrets"
            - name: SECRET_MANAGEMENT_TYPE
              value: "kubernetes-native"
            {{- end }}
            # Additional Environment Variables
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- if .Values.configMap.enabled }}
            - name: CONFIG_MAP_NAME
              value: {{ include "java-backend1.fullname" . }}-config
            {{- end }}
            # Environment variables from Kubernetes Secret
            {{- if .Values.kubernetesSecrets.enabled }}
            {{- range .Values.kubernetesSecrets.secrets }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.kubernetesSecrets.secretName | default "app-secrets" }}
                  key: {{ .key }}
            {{- end }}
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.kubernetesSecrets.enabled }}
            - name: secrets-volume
              mountPath: /etc/secrets
              readOnly: true
            {{- end }}
            {{- if .Values.configMap.enabled }}
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
            {{- end }}
            {{- if .Values.volumeMounts }}
            {{- toYaml .Values.volumeMounts | nindent 12 }}
            {{- end }}
      volumes:
        {{- if .Values.kubernetesSecrets.enabled }}
        - name: secrets-volume
          secret:
            secretName: {{ .Values.kubernetesSecrets.secretName | default "app-secrets" }}
            defaultMode: 0644
        {{- end }}
        {{- if .Values.configMap.enabled }}
        - name: config-volume
          configMap:
            name: {{ include "java-backend1.fullname" . }}-config
            defaultMode: 0644
        {{- end }}
        {{- if .Values.volumes }}
        {{- toYaml .Values.volumes | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- if .Values.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "java-backend1.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "java-backend1.labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "java-backend1.fullname" . }}
  minReplicas: {{ .Values.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.autoscaling.maxReplicas }}
  metrics:
    {{- if .Values.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}
    {{- end }}
    {{- if .Values.autoscaling.targetMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.autoscaling.targetMemoryUtilizationPercentage }}
    {{- end }}
{{- end }}