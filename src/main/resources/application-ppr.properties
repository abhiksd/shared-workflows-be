# =======================================================================
# PPR (PRE-PRODUCTION) ENVIRONMENT CONFIGURATION
# =======================================================================

# Environment-specific information
spring.profiles.active=ppr
environment.name=pre-production
environment.short=ppr

# MONITORING
api.endpoint=my-app
api.name=Helper App (Pre-Production)
api.version=v1-ppr

# Server Configuration
server.error.whitelabel.enabled=false
server.port=${SERVER_PORT:8280}
server.servlet.context-path=/my-app

# =======================================================================
# AZURE KEY VAULT INTEGRATION (PPR)
# =======================================================================

# Enable Key Vault for PPR environment
azure.keyvault.enabled=true
azure.keyvault.uri=${AZURE_KEYVAULT_URI:https://kv-my-app-ppr.vault.azure.net/}
azure.keyvault.tenant-id=${AZURE_TENANT_ID}
azure.keyvault.client-id=${AZURE_CLIENT_ID}

# =======================================================================
# THIRD PARTY INTEGRATIONS
# =======================================================================

# Back4Product Reference URL (PPR - production-like)
back4product.ref.url=https://pnehelper-emea.schneider-electric.com/back4product/v1/

# =======================================================================
# DATABASE CONFIGURATION (MONGODB)
# =======================================================================

# MongoDB Configuration (PPR - from Key Vault)
spring.data.mongodb.database=my-app-ppr
spring.data.mongodb.uri=${mongodb-connection-string-ppr}
spring.data.mongodb.health.uri=${mongodb-health-connection-string-ppr}

# PPR connection pool settings (production-like)
spring.data.mongodb.options.connections-per-host=80
spring.data.mongodb.options.min-connections-per-host=10
spring.data.mongodb.options.max-connection-idle-time=60000
spring.data.mongodb.options.max-connection-life-time=120000
spring.data.mongodb.options.connect-timeout=10000
spring.data.mongodb.options.socket-timeout=30000
spring.data.mongodb.options.server-selection-timeout=30000

# =======================================================================
# CACHE CONFIGURATION
# =======================================================================

# Memcached Configuration (PPR)
memcached.addresses=${memcached-addresses-ppr:ppr.cfg.euw1.cache.amazonaws.com:11211}
memcached.expiration.sec=3600
memcached.binary.protocol=true
memcached.timeout.millis=5000
memcached.failure.mode=retry

# Caffeine Local Cache (PPR)
cafeine.expiration.sec=86400
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=800,expireAfterAccess=86400s

# Redis Configuration (PPR)
spring.redis.host=${redis-host-ppr:ppr-redis.cache.windows.net}
spring.redis.port=${redis-port:6380}
spring.redis.password=${redis-password-ppr}
spring.redis.ssl=true
spring.redis.timeout=2000ms
spring.redis.jedis.pool.max-active=18
spring.redis.jedis.pool.max-idle=9
spring.redis.jedis.pool.min-idle=4

# =======================================================================
# SECURITY CONFIGURATION
# =======================================================================

# JWT Configuration (PPR - from Key Vault)
jwt.secret=${jwt-secret-ppr}
jwt.expiration=${jwt-expiration:86400}
jwt.refresh-expiration=${jwt-refresh-expiration:604800}
jwt.issuer=my-app-ppr

# CORS Configuration (PPR)
cors.allowed-origins=${cors-allowed-origins-ppr:https://preprod.mydomain.com,https://ppr.mydomain.com}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=Authorization,Content-Type,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
cors.allow-credentials=true
cors.max-age=3600

# SSL/TLS Configuration
server.ssl.enabled=false
# SSL handled by Azure Application Gateway

# =======================================================================
# MONITORING & LOGGING
# =======================================================================

# Logging Configuration (PPR - production-like)
logging.level.root=INFO
logging.level.com.mycompany=INFO
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=WARN
logging.level.org.mongodb.driver=WARN

# Application Insights (PPR)
azure.application-insights.instrumentation-key=${application-insights-key-ppr}
azure.application-insights.enabled=true

# Metrics
management.metrics.export.azuremonitor.enabled=true
management.metrics.export.azuremonitor.instrumentation-key=${application-insights-key-ppr}

# Health checks (limited detail for PPR)
management.endpoint.health.show-details=when-authorized
management.endpoints.web.exposure.include=health,info,metrics,prometheus

# =======================================================================
# PERFORMANCE & RESILIENCE
# =======================================================================

# Connection timeout settings (production-like)
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=40
spring.datasource.hikari.minimum-idle=8
spring.datasource.hikari.idle-timeout=300000

# Circuit breaker configuration
resilience4j.circuitbreaker.instances.mongodb.sliding-window-size=10
resilience4j.circuitbreaker.instances.mongodb.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.mongodb.wait-duration-in-open-state=30s

# Retry configuration
resilience4j.retry.instances.mongodb.max-attempts=3
resilience4j.retry.instances.mongodb.wait-duration=1s

# Rate limiting
resilience4j.ratelimiter.instances.api.limit-for-period=1500
resilience4j.ratelimiter.instances.api.limit-refresh-period=1s
resilience4j.ratelimiter.instances.api.timeout-duration=4s

# =======================================================================
# BLUE-GREEN DEPLOYMENT (PPR)
# =======================================================================

# Blue-Green deployment configuration
deployment.strategy=blue-green
deployment.slot=${DEPLOYMENT_SLOT:blue}
deployment.blue-green.enabled=${BLUE_GREEN_ENABLED:true}
deployment.namespace=${DEPLOYMENT_NAMESPACE:ppr-my-app-${DEPLOYMENT_SLOT}}

# Feature flags for PPR
feature.new-features.enabled=${FEATURE_NEW_FEATURES_ENABLED:true}
feature.experimental.enabled=${FEATURE_EXPERIMENTAL_ENABLED:false}

# Blue-Green specific health checks
health.blue-green.enabled=true
health.blue-green.check-interval=30s
health.blue-green.failure-threshold=3

# =======================================================================
# PRE-PRODUCTION VALIDATION
# =======================================================================

# Production readiness checks
validation.performance.enabled=true
validation.security.enabled=true
validation.integration.enabled=true

# Production mirror configuration
mirror.production.data=${MIRROR_PRODUCTION_DATA:false}
mirror.production.traffic=${MIRROR_PRODUCTION_TRAFFIC:false}

# =======================================================================
# EXTERNAL SERVICES
# =======================================================================

# External API configurations (PPR - production-like)
external.api.timeout=30000
external.api.retry.max-attempts=3
external.api.retry.delay=1000

# OAuth2 Configuration (PPR)
spring.security.oauth2.client.registration.azure.client-id=${oauth2-client-id-ppr}
spring.security.oauth2.client.registration.azure.client-secret=${oauth2-client-secret-ppr}
spring.security.oauth2.client.registration.azure.scope=openid,profile,email
spring.security.oauth2.client.provider.azure.issuer-uri=${oauth2-issuer-uri-ppr}

# =======================================================================
# PRODUCTION READINESS CHECKS
# =======================================================================

# Performance thresholds
performance.response-time.threshold=1500
performance.throughput.threshold=500
performance.error-rate.threshold=1.0

# Security validation
security.vulnerability.scan.enabled=true
security.penetration.test.enabled=true
security.compliance.check.enabled=true

# Integration testing
integration.smoke-test.enabled=true
integration.regression-test.enabled=true
integration.load-test.enabled=true

# =======================================================================
# ACTUATOR PPR SETTINGS
# =======================================================================

# Actuator security (production-like)
management.endpoint.health.group.readiness.include=readinessState,mongo,diskSpace
management.endpoint.health.group.liveness.include=livenessState,ping
management.endpoint.health.probes.enabled=true

# Disable sensitive endpoints in PPR
management.endpoint.env.enabled=false
management.endpoint.configprops.enabled=false