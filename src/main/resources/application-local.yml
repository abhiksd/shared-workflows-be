# Local Development Profile
# Optimized for local development with minimal external dependencies
spring:
  profiles:
    active: local
  
  # H2 In-Memory Database for local development
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 1
      connection-timeout: 30000
  
  # H2 Console Configuration
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        trace: false
        web-allow-others: false
  
  # JPA Configuration for H2
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          time_zone: UTC
  
  # Cache Configuration - Simple in-memory caching
  cache:
    type: simple
    cache-names: default,users,sessions
    simple:
      spec: maximumSize=500,expireAfterWrite=300s

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api
  error:
    include-stacktrace: always
    include-message: always
    include-binding-errors: always

# Logging Configuration
logging:
  level:
    com.example.javaapp: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.cache: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.boot.actuator: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Management & Actuator - Full exposure for development
management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    shutdown:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: java-app
      environment: local

# Application Configuration
app:
  name: Java App
  version: ${APP_VERSION:1.0.0-LOCAL}
  environment: local
  
  # CORS Configuration - Permissive for local development
  cors:
    allowed-origins: "http://localhost:3000,http://localhost:8080,http://localhost:8081"
    allowed-methods: "*"
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
  
  # JWT Configuration - Simple for local development
  jwt:
    secret: "local-development-secret-key-not-for-production"
    expiration: 86400000  # 24 hours
    refresh-expiration: 604800000  # 7 days
    issuer: "local-java-app"
  
  # Rate Limiting - Disabled for local development
  rate-limit:
    enabled: false
    
  # File Upload
  upload:
    max-file-size: 10MB
    max-request-size: 50MB
    temp-dir: ${java.io.tmpdir}/uploads

# Spring Boot Configuration Management
# Local development profile-based configuration
config:
  profile:
    management:
      enabled: true
      source: "spring-boot-profiles"
      sensitive-data-handling: "local-properties"
      debug:
        enabled: true
        show-active-profiles: true
        show-property-sources: true

# Development Features
debug:
  enabled: true
  sql-queries: true
  cache-operations: true
  request-response-logging: true
  security-events: true

# Local development secrets (not for production)
local:
  secrets:
    # These would normally come from Kubernetes secrets in other environments
    database:
      password: "local-dev-password"
    jwt:
      secret: "local-development-secret-key"
    api:
      key: "local-api-key"