name: 'Check Changes'
description: 'Determines if deployment is needed based on file changes'

inputs:
  application_name:
    description: 'Application name'
    required: true
  build_context:
    description: 'Build context path'
    required: true
  force_deploy:
    description: 'Force deployment'
    required: false
    default: 'false'

outputs:
  should_deploy:
    description: 'Whether deployment should proceed'
    value: ${{ steps.changes.outputs.should_deploy }}

runs:
  using: 'composite'
  steps:
    - name: Check for changes
      id: changes
      run: |
        echo "Checking changes for application: ${{ inputs.application_name }}"
        echo "Build context: ${{ inputs.build_context }}"
        echo "Force deploy: ${{ inputs.force_deploy }}"
        
        # Load deployment utilities
        source ${{ github.workspace }}/scripts/deployment-utils.sh
        
        # Get changed files for push events
        CHANGED_FILES=""
        if [[ "${{ github.event_name }}" == "push" ]]; then
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} 2>/dev/null || echo "")
        fi
        
        # Determine if deployment is needed
        if should_deploy_based_on_changes "${{ inputs.build_context }}" "${{ inputs.force_deploy }}" "$CHANGED_FILES"; then
          SHOULD_DEPLOY="true"
          echo "✅ Deployment required"
        else
          SHOULD_DEPLOY="false"
          echo "ℹ️ No deployment needed"
        fi
        
        echo "should_deploy=${SHOULD_DEPLOY}" >> $GITHUB_OUTPUT
      shell: bash