name: 'Workspace Cleanup'
description: 'Clean workspace and Docker environment for fresh pipeline runs'
author: 'DevOps Team'

inputs:
  cleanup_docker:
    description: 'Whether to clean Docker environment (images, containers, volumes)'
    required: false
    default: 'true'
  cleanup_temp:
    description: 'Whether to clean temporary files'
    required: false
    default: 'true'
  
outputs:
  cleanup_status:
    description: 'Status of cleanup operation'
    value: ${{ steps.cleanup.outputs.status }}

runs:
  using: 'composite'
  steps:
    - name: Workspace cleanup
      id: cleanup
      shell: bash
      run: |
        echo "🧹 Starting workspace cleanup..."
        
        # Clean workspace files
        echo "📁 Cleaning workspace files..."
        rm -rf ${{ github.workspace }}/* || true
        rm -rf ${{ github.workspace }}/.* || true
        echo "✅ Workspace files cleaned"
        
        # Clean Docker environment if requested
        if [[ "${{ inputs.cleanup_docker }}" == "true" ]]; then
          if command -v docker &> /dev/null; then
            echo "🐳 Cleaning Docker environment..."
            
            # Stop all running containers
            docker ps -q | xargs -r docker stop || true
            
            # Remove all containers
            docker ps -aq | xargs -r docker rm -f || true
            
            # Remove all images
            docker images -q | xargs -r docker rmi -f || true
            
            # Clean system (networks, volumes, build cache)
            docker system prune -af --volumes || true
            
            # Clean builder cache
            docker builder prune -af || true
            
            echo "✅ Docker environment cleaned"
          else
            echo "ℹ️ Docker not available, skipping Docker cleanup"
          fi
        else
          echo "⏭️ Docker cleanup skipped"
        fi
        
        # Clean temporary files if requested
        if [[ "${{ inputs.cleanup_temp }}" == "true" ]]; then
          echo "🗑️ Cleaning temporary files..."
          rm -rf /tmp/* || true
          rm -rf /var/tmp/* || true
          echo "✅ Temporary files cleaned"
        else
          echo "⏭️ Temporary files cleanup skipped"
        fi
        
        # Clean package manager caches
        echo "📦 Cleaning package manager caches..."
        
        # Clean npm cache if available
        if command -v npm &> /dev/null; then
          npm cache clean --force || true
        fi
        
        # Clean Maven cache if available
        if command -v mvn &> /dev/null; then
          rm -rf ~/.m2/repository || true
        fi
        
        # Clean pip cache if available
        if command -v pip &> /dev/null; then
          pip cache purge || true
        fi
        
        echo "✅ Package manager caches cleaned"
        
        # Output final status
        echo "status=success" >> $GITHUB_OUTPUT
        echo "🎯 Workspace cleanup completed successfully!"
        echo "📊 Available disk space:"
        df -h | head -n 2