name: Deploy Node.js Application

on:
  push:
    branches:
      - main
      - develop
      - 'release/**'
    paths:
      - 'apps/nodejs-app/**'
      - 'helm/nodejs-app/**'
      - '.github/workflows/deploy-nodejs-app.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'apps/nodejs-app/**'
      - 'helm/nodejs-app/**'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if no changes'
        required: false
        type: boolean
        default: false

# Grant permissions for managed identity
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    uses: ./.github/workflows/shared-deploy.yml
    with:
      application_name: nodejs-app
      application_type: nodejs
      build_context: apps/nodejs-app
      dockerfile_path: apps/nodejs-app/Dockerfile
      helm_chart_path: helm/nodejs-app
      force_deploy: ${{ github.event.inputs.force_deploy == 'true' }}
      keyvault_name: ${{ vars.AZURE_KEYVAULT_NAME || '' }}
    secrets:
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      AKS_CLUSTER_NAME_DEV: ${{ secrets.AKS_CLUSTER_NAME_DEV }}
      AKS_RESOURCE_GROUP_DEV: ${{ secrets.AKS_RESOURCE_GROUP_DEV }}
      AKS_CLUSTER_NAME_STAGING: ${{ secrets.AKS_CLUSTER_NAME_STAGING }}
      AKS_RESOURCE_GROUP_STAGING: ${{ secrets.AKS_RESOURCE_GROUP_STAGING }}
      AKS_CLUSTER_NAME_PROD: ${{ secrets.AKS_CLUSTER_NAME_PROD }}
      AKS_RESOURCE_GROUP_PROD: ${{ secrets.AKS_RESOURCE_GROUP_PROD }}