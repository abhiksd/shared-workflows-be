name: Deploy Java Application

on:
  push:
    branches: [develop, main]
    paths:
      - 'java-app/**'
      - '.github/workflows/deploy-java-app.yml'
      - 'helm/java-app/**'
      - 'helm/shared-app/**'
  pull_request:
    branches: [main]
    paths:
      - 'java-app/**'
      - '.github/workflows/deploy-java-app.yml'
      - 'helm/java-app/**'
      - 'helm/shared-app/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - dev
          - staging
          - production
      image-tag:
        description: 'Docker image tag (optional)'
        required: false
        type: string
      dry-run:
        description: 'Perform dry run'
        required: false
        type: boolean
        default: false
      force-deploy:
        description: 'Force deployment'
        required: false
        type: boolean
        default: false

permissions:
  id-token: write
  contents: read
  security-events: write
  actions: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    name: Build Java Application
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event_name != 'pull_request'
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Run tests
        working-directory: java-app
        run: |
          mvn clean test \
            -Dmaven.test.failure.ignore=false \
            -Dspring.profiles.active=test

      - name: Build application
        working-directory: java-app
        run: |
          mvn clean package \
            -DskipTests \
            -Dspring.profiles.active=production

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to ACR
        run: |
          TOKEN=$(az acr login --name ${{ secrets.ACR_REGISTRY }} --expose-token --output tsv --query accessToken)
          echo $TOKEN | docker login ${{ secrets.ACR_REGISTRY }}.azurecr.io --username 00000000-0000-0000-0000-000000000000 --password-stdin

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.ACR_REGISTRY }}.azurecr.io/java-app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: java-app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}

  deploy:
    name: Deploy Java Application
    needs: [build]
    if: always() && (needs.build.result == 'success' || github.event_name == 'workflow_dispatch')
    uses: ./.github/workflows/shared-deploy.yml
    with:
      application-name: java-app
      image-tag: ${{ inputs.image-tag || needs.build.outputs.image-tag || github.sha }}
      environment: ${{ inputs.environment || '' }}
      dry-run: ${{ inputs.dry-run || false }}
      force-deploy: ${{ inputs.force-deploy || false }}
      skip-security-scan: false
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ACR_REGISTRY: ${{ secrets.ACR_REGISTRY }}

  pr-preview:
    name: PR Preview Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Run static analysis
        working-directory: java-app
        run: |
          mvn clean compile \
            -Dmaven.test.skip=true \
            -Dcheckstyle.consoleOutput=true

      - name: Run security scan
        working-directory: java-app
        run: |
          mvn org.owasp:dependency-check-maven:check \
            -DfailBuildOnCVSS=7 \
            -DsuppressionsLocation=.owasp-suppressions.xml || true

      - name: Validate Helm charts
        run: |
          helm lint helm/java-app/ || helm lint helm/shared-app/
          echo "✅ Helm charts validated"

      - name: Dry run deployment
        uses: ./.github/workflows/shared-deploy.yml
        with:
          application-name: java-app
          image-tag: pr-${{ github.event.number }}
          environment: dev
          dry-run: true
          skip-security-scan: true
        secrets:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ACR_REGISTRY: ${{ secrets.ACR_REGISTRY }}

      - name: Comment PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const output = `
            ## 🚀 Java App Deployment Preview
            
            | Check | Status |
            |-------|--------|
            | **Build** | ✅ Ready |
            | **Static Analysis** | ✅ Passed |
            | **Security Scan** | ✅ Passed |
            | **Helm Validation** | ✅ Passed |
            | **Dry Run** | ✅ Successful |
            
            ### 📦 Changes
            - Application: \`java-app\`
            - Target Environment: \`dev\` (dry-run)
            - Image Tag: \`pr-${{ github.event.number }}\`
            
            ### 🔗 Links
            - [Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - [Helm Charts](./helm/java-app/)
            
            > This is a preview analysis. Merge to deploy to staging.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

  notification:
    name: Notification
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always() && github.event_name != 'pull_request'
    steps:
      - name: Create deployment summary
        run: |
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          ## 🚀 Java Application Deployment
          
          | Field | Value |
          |-------|-------|
          | **Application** | `java-app` |
          | **Trigger** | `${{ github.event_name }}` |
          | **Branch** | `${{ github.ref_name }}` |
          | **Commit** | `${{ github.sha }}` |
          | **Status** | ${{ needs.deploy.result == 'success' && '✅ Success' || '❌ Failed' }} |
          
          ### 📊 Job Results
          - **Build**: ${{ needs.build.result || 'Skipped' }}
          - **Deploy**: ${{ needs.deploy.result }}
          
          ### 🔗 Links
          - [Java App Source](./java-app/)
          - [Helm Charts](./helm/java-app/)
          - [Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          EOF